// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DeleteButton /> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeleteButton
    handleDelete={[MockFunction]}
    id={0}
    itemId={1}
    title="Test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropTransition={
            Object {
              "mountOnEnter": true,
              "timeout": 150,
            }
          }
          centered={false}
          fade={true}
          isOpen={false}
          keyboard={true}
          modalTransition={
            Object {
              "timeout": 300,
            }
          }
          onClosed={[Function]}
          onOpened={[Function]}
          role="dialog"
          toggle={[Function]}
          zIndex={1050}
        >
          <ModalHeader
            charCode={215}
            closeAriaLabel="Close"
            tag="h5"
            toggle={[Function]}
            wrapTag="div"
          >
            Delete document
          </ModalHeader>
          <ModalBody
            tag="div"
          >
            Are you sure that you would like to delete this document?
          </ModalBody>
          <ModalFooter
            tag="div"
          >
            <Button
              color="primary"
              onClick={[Function]}
              tag="button"
            >
              Yes, please remove
            </Button>
            <Button
              color="secondary"
              onClick={[Function]}
              tag="button"
            >
              Cancel
            </Button>
          </ModalFooter>
        </Modal>,
        <Form
          tag="form"
        >
          <FormGroup
            tag="div"
          >
            <InputGroup
              tag="div"
            >
              <Button
                color="danger"
                id="deleteButton0"
                onClick={[Function]}
                tag="button"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="trash"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Test"
                  transform={null}
                />
                 Delete
              </Button>
            </InputGroup>
          </FormGroup>
        </Form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoFocus": true,
          "backdrop": true,
          "backdropTransition": Object {
            "mountOnEnter": true,
            "timeout": 150,
          },
          "centered": false,
          "children": Array [
            <ModalHeader
              charCode={215}
              closeAriaLabel="Close"
              tag="h5"
              toggle={[Function]}
              wrapTag="div"
            >
              Delete document
            </ModalHeader>,
            <ModalBody
              tag="div"
            >
              Are you sure that you would like to delete this document?
            </ModalBody>,
            <ModalFooter
              tag="div"
            >
              <Button
                color="primary"
                onClick={[Function]}
                tag="button"
              >
                Yes, please remove
              </Button>
              <Button
                color="secondary"
                onClick={[Function]}
                tag="button"
              >
                Cancel
              </Button>
            </ModalFooter>,
          ],
          "fade": true,
          "isOpen": false,
          "keyboard": true,
          "modalTransition": Object {
            "timeout": 300,
          },
          "onClosed": [Function],
          "onOpened": [Function],
          "role": "dialog",
          "toggle": [Function],
          "zIndex": 1050,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "charCode": 215,
              "children": "Delete document",
              "closeAriaLabel": "Close",
              "tag": "h5",
              "toggle": [Function],
              "wrapTag": "div",
            },
            "ref": null,
            "rendered": "Delete document",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Are you sure that you would like to delete this document?",
              "tag": "div",
            },
            "ref": null,
            "rendered": "Are you sure that you would like to delete this document?",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Button
                  color="primary"
                  onClick={[Function]}
                  tag="button"
                >
                  Yes, please remove
                </Button>,
                <Button
                  color="secondary"
                  onClick={[Function]}
                  tag="button"
                >
                  Cancel
                </Button>,
              ],
              "tag": "div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Yes, please remove",
                  "color": "primary",
                  "onClick": [Function],
                  "tag": "button",
                },
                "ref": null,
                "rendered": "Yes, please remove",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Cancel",
                  "color": "secondary",
                  "onClick": [Function],
                  "tag": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <FormGroup
            tag="div"
          >
            <InputGroup
              tag="div"
            >
              <Button
                color="danger"
                id="deleteButton0"
                onClick={[Function]}
                tag="button"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="trash"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Test"
                  transform={null}
                />
                 Delete
              </Button>
            </InputGroup>
          </FormGroup>,
          "tag": "form",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <InputGroup
              tag="div"
            >
              <Button
                color="danger"
                id="deleteButton0"
                onClick={[Function]}
                tag="button"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="trash"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Test"
                  transform={null}
                />
                 Delete
              </Button>
            </InputGroup>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Button
                color="danger"
                id="deleteButton0"
                onClick={[Function]}
                tag="button"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="trash"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Test"
                  transform={null}
                />
                 Delete
              </Button>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="trash"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title="Test"
                    transform={null}
                  />,
                  " Delete",
                ],
                "color": "danger",
                "id": "deleteButton0",
                "onClick": [Function],
                "tag": "button",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "border": false,
                    "className": "",
                    "fixedWidth": false,
                    "flip": null,
                    "icon": "trash",
                    "inverse": false,
                    "listItem": false,
                    "mask": null,
                    "pull": null,
                    "pulse": false,
                    "rotation": null,
                    "size": null,
                    "spin": false,
                    "symbol": false,
                    "title": "Test",
                    "transform": null,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                " Delete",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Modal
            autoFocus={true}
            backdrop={true}
            backdropTransition={
              Object {
                "mountOnEnter": true,
                "timeout": 150,
              }
            }
            centered={false}
            fade={true}
            isOpen={false}
            keyboard={true}
            modalTransition={
              Object {
                "timeout": 300,
              }
            }
            onClosed={[Function]}
            onOpened={[Function]}
            role="dialog"
            toggle={[Function]}
            zIndex={1050}
          >
            <ModalHeader
              charCode={215}
              closeAriaLabel="Close"
              tag="h5"
              toggle={[Function]}
              wrapTag="div"
            >
              Delete document
            </ModalHeader>
            <ModalBody
              tag="div"
            >
              Are you sure that you would like to delete this document?
            </ModalBody>
            <ModalFooter
              tag="div"
            >
              <Button
                color="primary"
                onClick={[Function]}
                tag="button"
              >
                Yes, please remove
              </Button>
              <Button
                color="secondary"
                onClick={[Function]}
                tag="button"
              >
                Cancel
              </Button>
            </ModalFooter>
          </Modal>,
          <Form
            tag="form"
          >
            <FormGroup
              tag="div"
            >
              <InputGroup
                tag="div"
              >
                <Button
                  color="danger"
                  id="deleteButton0"
                  onClick={[Function]}
                  tag="button"
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="trash"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title="Test"
                    transform={null}
                  />
                   Delete
                </Button>
              </InputGroup>
            </FormGroup>
          </Form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoFocus": true,
            "backdrop": true,
            "backdropTransition": Object {
              "mountOnEnter": true,
              "timeout": 150,
            },
            "centered": false,
            "children": Array [
              <ModalHeader
                charCode={215}
                closeAriaLabel="Close"
                tag="h5"
                toggle={[Function]}
                wrapTag="div"
              >
                Delete document
              </ModalHeader>,
              <ModalBody
                tag="div"
              >
                Are you sure that you would like to delete this document?
              </ModalBody>,
              <ModalFooter
                tag="div"
              >
                <Button
                  color="primary"
                  onClick={[Function]}
                  tag="button"
                >
                  Yes, please remove
                </Button>
                <Button
                  color="secondary"
                  onClick={[Function]}
                  tag="button"
                >
                  Cancel
                </Button>
              </ModalFooter>,
            ],
            "fade": true,
            "isOpen": false,
            "keyboard": true,
            "modalTransition": Object {
              "timeout": 300,
            },
            "onClosed": [Function],
            "onOpened": [Function],
            "role": "dialog",
            "toggle": [Function],
            "zIndex": 1050,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "charCode": 215,
                "children": "Delete document",
                "closeAriaLabel": "Close",
                "tag": "h5",
                "toggle": [Function],
                "wrapTag": "div",
              },
              "ref": null,
              "rendered": "Delete document",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Are you sure that you would like to delete this document?",
                "tag": "div",
              },
              "ref": null,
              "rendered": "Are you sure that you would like to delete this document?",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Button
                    color="primary"
                    onClick={[Function]}
                    tag="button"
                  >
                    Yes, please remove
                  </Button>,
                  <Button
                    color="secondary"
                    onClick={[Function]}
                    tag="button"
                  >
                    Cancel
                  </Button>,
                ],
                "tag": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Yes, please remove",
                    "color": "primary",
                    "onClick": [Function],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": "Yes, please remove",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Cancel",
                    "color": "secondary",
                    "onClick": [Function],
                    "tag": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormGroup
              tag="div"
            >
              <InputGroup
                tag="div"
              >
                <Button
                  color="danger"
                  id="deleteButton0"
                  onClick={[Function]}
                  tag="button"
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="trash"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title="Test"
                    transform={null}
                  />
                   Delete
                </Button>
              </InputGroup>
            </FormGroup>,
            "tag": "form",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <InputGroup
                tag="div"
              >
                <Button
                  color="danger"
                  id="deleteButton0"
                  onClick={[Function]}
                  tag="button"
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="trash"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title="Test"
                    transform={null}
                  />
                   Delete
                </Button>
              </InputGroup>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Button
                  color="danger"
                  id="deleteButton0"
                  onClick={[Function]}
                  tag="button"
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon="trash"
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title="Test"
                    transform={null}
                  />
                   Delete
                </Button>,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <FontAwesomeIcon
                      border={false}
                      className=""
                      fixedWidth={false}
                      flip={null}
                      icon="trash"
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size={null}
                      spin={false}
                      symbol={false}
                      title="Test"
                      transform={null}
                    />,
                    " Delete",
                  ],
                  "color": "danger",
                  "id": "deleteButton0",
                  "onClick": [Function],
                  "tag": "button",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "border": false,
                      "className": "",
                      "fixedWidth": false,
                      "flip": null,
                      "icon": "trash",
                      "inverse": false,
                      "listItem": false,
                      "mask": null,
                      "pull": null,
                      "pulse": false,
                      "rotation": null,
                      "size": null,
                      "spin": false,
                      "symbol": false,
                      "title": "Test",
                      "transform": null,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  " Delete",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
