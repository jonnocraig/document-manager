// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <List
    filter=""
    handleFilter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <FormGroup
        tag="div"
      >
        <InputGroup
          tag="div"
        >
          <InputGroupAddon
            addonType="prepend"
            tag="div"
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={false}
              flip={null}
              icon="search"
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              symbol={false}
              title="Search"
              transform={null}
            />
          </InputGroupAddon>
          <Input
            id="filterDocuments"
            onChange={[MockFunction]}
            placeholder="Search by name or type"
            type="text"
            value=""
          />
        </InputGroup>
      </FormGroup>,
      "tag": "form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <InputGroup
          tag="div"
        >
          <InputGroupAddon
            addonType="prepend"
            tag="div"
          >
            <FontAwesomeIcon
              border={false}
              className=""
              fixedWidth={false}
              flip={null}
              icon="search"
              inverse={false}
              listItem={false}
              mask={null}
              pull={null}
              pulse={false}
              rotation={null}
              size={null}
              spin={false}
              symbol={false}
              title="Search"
              transform={null}
            />
          </InputGroupAddon>
          <Input
            id="filterDocuments"
            onChange={[MockFunction]}
            placeholder="Search by name or type"
            type="text"
            value=""
          />
        </InputGroup>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <InputGroupAddon
              addonType="prepend"
              tag="div"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="search"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title="Search"
                transform={null}
              />
            </InputGroupAddon>,
            <Input
              id="filterDocuments"
              onChange={[MockFunction]}
              placeholder="Search by name or type"
              type="text"
              value=""
            />,
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "addonType": "prepend",
              "children": <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="search"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title="Search"
                transform={null}
              />,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "border": false,
                "className": "",
                "fixedWidth": false,
                "flip": null,
                "icon": "search",
                "inverse": false,
                "listItem": false,
                "mask": null,
                "pull": null,
                "pulse": false,
                "rotation": null,
                "size": null,
                "spin": false,
                "symbol": false,
                "title": "Search",
                "transform": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "filterDocuments",
              "onChange": [MockFunction],
              "placeholder": "Search by name or type",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FormGroup
          tag="div"
        >
          <InputGroup
            tag="div"
          >
            <InputGroupAddon
              addonType="prepend"
              tag="div"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="search"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title="Search"
                transform={null}
              />
            </InputGroupAddon>
            <Input
              id="filterDocuments"
              onChange={[MockFunction]}
              placeholder="Search by name or type"
              type="text"
              value=""
            />
          </InputGroup>
        </FormGroup>,
        "tag": "form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <InputGroup
            tag="div"
          >
            <InputGroupAddon
              addonType="prepend"
              tag="div"
            >
              <FontAwesomeIcon
                border={false}
                className=""
                fixedWidth={false}
                flip={null}
                icon="search"
                inverse={false}
                listItem={false}
                mask={null}
                pull={null}
                pulse={false}
                rotation={null}
                size={null}
                spin={false}
                symbol={false}
                title="Search"
                transform={null}
              />
            </InputGroupAddon>
            <Input
              id="filterDocuments"
              onChange={[MockFunction]}
              placeholder="Search by name or type"
              type="text"
              value=""
            />
          </InputGroup>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <InputGroupAddon
                addonType="prepend"
                tag="div"
              >
                <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="search"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Search"
                  transform={null}
                />
              </InputGroupAddon>,
              <Input
                id="filterDocuments"
                onChange={[MockFunction]}
                placeholder="Search by name or type"
                type="text"
                value=""
              />,
            ],
            "tag": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "addonType": "prepend",
                "children": <FontAwesomeIcon
                  border={false}
                  className=""
                  fixedWidth={false}
                  flip={null}
                  icon="search"
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size={null}
                  spin={false}
                  symbol={false}
                  title="Search"
                  transform={null}
                />,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "border": false,
                  "className": "",
                  "fixedWidth": false,
                  "flip": null,
                  "icon": "search",
                  "inverse": false,
                  "listItem": false,
                  "mask": null,
                  "pull": null,
                  "pulse": false,
                  "rotation": null,
                  "size": null,
                  "spin": false,
                  "symbol": false,
                  "title": "Search",
                  "transform": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "filterDocuments",
                "onChange": [MockFunction],
                "placeholder": "Search by name or type",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
