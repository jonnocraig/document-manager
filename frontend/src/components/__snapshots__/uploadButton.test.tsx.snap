// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UploadButton /> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UploadButton
    handleUpload={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <FormGroup
        tag="div"
      >
        <Label
          for="uploadDocument"
          tag="label"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          Add document
        </Label>
        <div
          className="file-input-wrapper"
        >
          <Input
            id="uploadDocument"
            name="file"
            onChange={[MockFunction]}
            type="file"
          />
          <Button
            color="success"
            tag="button"
          >
            Upload
          </Button>
        </div>
      </FormGroup>,
      "tag": "form",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Label
            for="uploadDocument"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Add document
          </Label>,
          <div
            className="file-input-wrapper"
          >
            <Input
              id="uploadDocument"
              name="file"
              onChange={[MockFunction]}
              type="file"
            />
            <Button
              color="success"
              tag="button"
            >
              Upload
            </Button>
          </div>,
        ],
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Add document",
            "for": "uploadDocument",
            "tag": "label",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": "Add document",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Input
                id="uploadDocument"
                name="file"
                onChange={[MockFunction]}
                type="file"
              />,
              <Button
                color="success"
                tag="button"
              >
                Upload
              </Button>,
            ],
            "className": "file-input-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "id": "uploadDocument",
                "name": "file",
                "onChange": [MockFunction],
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Upload",
                "color": "success",
                "tag": "button",
              },
              "ref": null,
              "rendered": "Upload",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <FormGroup
          tag="div"
        >
          <Label
            for="uploadDocument"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Add document
          </Label>
          <div
            className="file-input-wrapper"
          >
            <Input
              id="uploadDocument"
              name="file"
              onChange={[MockFunction]}
              type="file"
            />
            <Button
              color="success"
              tag="button"
            >
              Upload
            </Button>
          </div>
        </FormGroup>,
        "tag": "form",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Label
              for="uploadDocument"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Add document
            </Label>,
            <div
              className="file-input-wrapper"
            >
              <Input
                id="uploadDocument"
                name="file"
                onChange={[MockFunction]}
                type="file"
              />
              <Button
                color="success"
                tag="button"
              >
                Upload
              </Button>
            </div>,
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Add document",
              "for": "uploadDocument",
              "tag": "label",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": "Add document",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Input
                  id="uploadDocument"
                  name="file"
                  onChange={[MockFunction]}
                  type="file"
                />,
                <Button
                  color="success"
                  tag="button"
                >
                  Upload
                </Button>,
              ],
              "className": "file-input-wrapper",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "uploadDocument",
                  "name": "file",
                  "onChange": [MockFunction],
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Upload",
                  "color": "success",
                  "tag": "button",
                },
                "ref": null,
                "rendered": "Upload",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
